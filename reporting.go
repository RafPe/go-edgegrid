package edgegrid

import (
	"fmt"
	"log"
	"net/http"
	"os"
	"time"
)

// PropertyService represents exposed services to manage properties
//
// Akamai API docs: https://developer.akamai.com/api/luna/papi
type ReportingAPIService struct {
	client *Client
}
type AutoGenerated struct {
	Metadata struct {
		Name               string      `json:"name"`
		Version            string      `json:"version"`
		Start              time.Time   `json:"start"`
		End                time.Time   `json:"end"`
		GroupBy            []string    `json:"groupBy"`
		Interval           string      `json:"interval"`
		ObjectType         string      `json:"objectType"`
		ObjectIds          []string    `json:"objectIds"`
		AvailableDataEnds  interface{} `json:"availableDataEnds"`
		SuggestedRetryTime interface{} `json:"suggestedRetryTime"`
		RowCount           int         `json:"rowCount"`
		Filters            []struct {
			Name  string   `json:"name"`
			Value []string `json:"value"`
		} `json:"filters"`
		Columns []struct {
			Name  string `json:"name"`
			Label string `json:"label"`
		} `json:"columns"`
		URI string `json:"uri"`
	} `json:"metadata"`
	Data []struct {
		Timestamp                time.Time `json:"timestamp"`
		AllEdgeHitsPerSecond     int       `json:"allEdgeHitsPerSecond"`
		AllOriginHitsPerSecond   int       `json:"allOriginHitsPerSecond"`
		AllMidgressHitsPerSecond int       `json:"allMidgressHitsPerSecond"`
		AllHitsOffload           int       `json:"allHitsOffload"`
	} `json:"data"`
	SummaryStatistics struct {
		AllHitsOffloadAvg struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"allHitsOffloadAvg"`
		AllHitsOffloadMin struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allHitsOffloadMin"`
		AllHitsOffloadMax struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allHitsOffloadMax"`
		AllEdgeHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"allEdgeHitsTotal"`
		AllEdgeHitsMin struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allEdgeHitsMin"`
		AllEdgeHitsMax struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allEdgeHitsMax"`
		AllMidgressHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"allMidgressHitsTotal"`
		AllMidgressHitsMin struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allMidgressHitsMin"`
		AllMidgressHitsMax struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allMidgressHitsMax"`
		AllOriginHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"allOriginHitsTotal"`
		AllOriginHitsMin struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allOriginHitsMin"`
		AllOriginHitsMax struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allOriginHitsMax"`
		AllEdgeResponsetimeAvg struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"allEdgeResponsetimeAvg"`
		AllEdgeResponsetimeMin struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allEdgeResponsetimeMin"`
		AllEdgeResponsetimeMax struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allEdgeResponsetimeMax"`
		AllOriginResponsetimeAvg struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"allOriginResponsetimeAvg"`
		AllOriginResponsetimeMin struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allOriginResponsetimeMin"`
		AllOriginResponsetimeMax struct {
			Value   string `json:"value"`
			Details struct {
				Startdatetime time.Time `json:"startdatetime"`
			} `json:"details"`
		} `json:"allOriginResponsetimeMax"`
		AllEdgeHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"allEdgeHitsPercent"`
		TwoXxEdgeHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"2xxEdgeHitsTotal"`
		TwoXxEdgeHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"2xxEdgeHitsPercent"`
		ThreeXxEdgeHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"3xxEdgeHitsTotal"`
		ThreeXxEdgeHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"3xxEdgeHitsPercent"`
		FourXxEdgeHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"4xxEdgeHitsTotal"`
		FourXxEdgeHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"4xxEdgeHitsPercent"`
		FiveXxEdgeHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"5xxEdgeHitsTotal"`
		FiveXxEdgeHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"5xxEdgeHitsPercent"`
		OtherEdgeHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"otherEdgeHitsTotal"`
		OtherEdgeHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"otherEdgeHitsPercent"`
		AllOriginHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"allOriginHitsPercent"`
		TwoXxOriginHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"2xxOriginHitsTotal"`
		TwoXxOriginHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"2xxOriginHitsPercent"`
		ThreeXxOriginHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"3xxOriginHitsTotal"`
		ThreeXxOriginHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"3xxOriginHitsPercent"`
		FourXxOriginHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"4xxOriginHitsTotal"`
		FourXxOriginHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"4xxOriginHitsPercent"`
		FiveXxOriginHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"5xxOriginHitsTotal"`
		FiveXxOriginHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"5xxOriginHitsPercent"`
		OtherOriginHitsTotal struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"otherOriginHitsTotal"`
		OtherOriginHitsPercent struct {
			Value   string `json:"value"`
			Details struct {
			} `json:"details"`
		} `json:"otherOriginHitsPercent"`
	} `json:"summaryStatistics"`
}

func (pas *ReportingAPIService) GenerateReportRequest() {
	req, err := http.NewRequest("GET", "http://api.themoviedb.org/3/tv/popular", nil)
	if err != nil {
		log.Print(err)
		os.Exit(1)
	}

	q := req.URL.Query()
	q.Add("api_key", "key_from_environment_or_flag")
	q.Add("another_thing", "foo & bar")
	req.URL.RawQuery = q.Encode()

	fmt.Println(req.URL.String())
	// Output:
	// http://api.themoviedb.org/3/tv/popular?another_thing=foo+%26+bar&api_key=key_from_environment_or_flag
}

// ListReportingAPIContracts This operation provides a read-only list of contract names and identifiers
//
// Akamai API docs: https://developer.akamai.com/api/luna/papi/resources.html#getcontracts
func (pas *ReportingAPIService) ListReportingAPIContracts() (*ReportingAPIContracts, *ClientResponse, error) {

	apiURI := fmt.Sprintf("%s/contracts", apiPaths["papi_v1"])

	var k *ReportingAPIContracts
	resp, err := pas.client.NewRequest("GET", apiURI, nil, &k)
	if err != nil {
		return nil, resp, err
	}

	return k, resp, err

}

// ListReportingAPIGroups This operation provides a read-only list of groups, which may contain properties.
//
// Akamai API docs: https://developer.akamai.com/api/luna/papi/resources.html#getgroups
func (pas *ReportingAPIService) ListReportingAPIGroups() (*ReportingAPIGroups, *ClientResponse, error) {

	apiURI := fmt.Sprintf("%s/groups", apiPaths["papi_v1"])

	var k *ReportingAPIGroups
	resp, err := pas.client.NewRequest("GET", apiURI, nil, &k)
	if err != nil {
		return nil, resp, err
	}

	return k, resp, err

}

// ListReportingAPICPCodes This operation lists CP codes available within your contract/group pairing.
//
// Akamai API docs: https://developer.akamai.com/api/luna/papi/resources.html#getcpcodes
func (pas *ReportingAPIService) ListReportingAPICPCodes(contractID, groupID string) (*ReportingAPICPCodes, *ClientResponse, error) {

	apiURI := fmt.Sprintf("%s/cpcodes?contractId=%s&groupId=%s",
		apiPaths["papi_v1"],
		contractID,
		groupID)

	var k *ReportingAPICPCodes
	resp, err := pas.client.NewRequest("GET", apiURI, nil, &k)
	if err != nil {
		return nil, resp, err
	}

	return k, resp, err

}

// ListReportingAPIProducts ListReportingAPIProducts.
//
// Akamai API docs: https://developer.akamai.com/api/luna/papi/resources.html#getcpcodes
func (pas *ReportingAPIService) ListReportingAPIProducts(contractId string) (*ReportingAPIProducts, *ClientResponse, error) {

	apiURI := fmt.Sprintf("%s/products?contractId=%s",
		apiPaths["papi_v1"],
		contractId)

	var k *ReportingAPIProducts
	resp, err := pas.client.NewRequest("GET", apiURI, nil, &k)
	if err != nil {
		return nil, resp, err
	}

	return k, resp, err

}

// NewReportingAPICPcode Creates new CP Code
//
// Akamai API docs: https://developer.akamai.com/api/luna/papi/resources.html#postcpcodes
func (pas *ReportingAPIService) NewReportingAPICPcode(newCPcode *ReportingAPICPCodeNew, contractID, groupID string) (*ClientResponse, error) {

	apiURI := fmt.Sprintf("%s/cpcodes?contractId=%s&groupId=%s",
		apiPaths["papi_v1"],
		contractID,
		groupID)

	resp, err := pas.client.NewRequest("POST", apiURI, newCPcode, nil)
	if err != nil {
		return resp, err
	}

	return resp, err

}

// ListReportingAPICPEdgehosts This lists all edge hostnames available under a contract..
//
// Akamai API docs: https://developer.akamai.com/api/luna/papi/resources.html#getedgehostnames
func (pas *ReportingAPIService) ListReportingAPICPEdgehosts(contractId string) (*ReportingAPICPEdgehosts, *ClientResponse, error) {

	apiURI := fmt.Sprintf("%s/edgehostnames?contractId=%s&groupId=%s&options=mapDetails",
		apiPaths["papi_v1"],
		contractId)

	var k *ReportingAPICPEdgehosts
	resp, err := pas.client.NewRequest("GET", apiURI, nil, &k)
	if err != nil {
		return nil, resp, err
	}

	return k, resp, err

}
